# Nginx Load Balancer Configuration
# Generated: {{generatedAt}}
# Nginx Version: {{nginxVersion}}

events {
    worker_connections {{workerConnections}};
    multi_accept on;
    use epoll;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size {{clientMaxBodySize}};
    
    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip Settings
    {{#if enableGzip}}
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    gzip_disable "MSIE [1-6]\.";
    {{/if}}

    # Upstream Services
    {{#each upstreamServices}}
    upstream {{this.name}} {
        {{#each this.servers}}
        server {{this.host}}:{{this.port}} weight=1 max_fails=3 fail_timeout=30s;
        {{/each}}
        keepalive 32;
    }
    {{/each}}

    # Main Server Block
    server {
        listen {{httpPort}};
        listen [::]:{{httpPort}};
        server_name {{serverName}};

        # Security Headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Proxy Settings
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Service Routes
        {{#each upstreamServices}}
        location /{{this.name}}/ {
            proxy_pass http://{{this.name}}/;
            
            # Cache settings
            {{#if ../enableCaching}}
            proxy_cache my_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            {{/if}}
        }
        {{/each}}

        # Health Check Endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }

        # Static Files
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Security: Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Default location
        location / {
            proxy_pass http://api-gateway:3000;
        }
    }

    {{#if enableSSL}}
    # HTTPS Server Block
    server {
        listen {{httpsPort}} ssl http2;
        listen [::]:{{httpsPort}} ssl http2;
        server_name {{serverName}};

        # SSL Configuration
        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Include the same location blocks as HTTP server
        include /etc/nginx/conf.d/locations.conf;
    }
    {{/if}}

    {{additionalConfig}}
}